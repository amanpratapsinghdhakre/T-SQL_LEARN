-- =================== COMMON TABLE EXPRESSION(CTE) IN SQL ================================

-- CTE IS AN ALTERNATE WAY OF SUBQUERY OR DERIVED TABLE.

-- CTE IS ALLOCATE IN MEMORY NOT IN DATABASE AND AFTER EXECUTION IT WILL DEALLOCATE.

SELECT * FROM EMPSALARY;

-- =================================    HOW TO DELETE DUPLICATE RECORDS FROM DATABASE?? =============================================

-- BY USING CTE WE CAN DELETE DUPLICATE RECORDS FROM TABLE.

SELECT EID,ENAME,ESALARY,DID, ROW_NUMBER() OVER(PARTITION BY EID,ENAME,ESALARY,DID ORDER BY EID) AS RNK FROM EMPSALARY; 

WITH REMOVERECORD(EID,ENAME,ESALARY,DID,RNK)
AS
(
SELECT EID,ENAME,ESALARY,DID,ROW_NUMBER() OVER(PARTITION BY EID,ENAME,ESALARY,DID ORDER BY EID) AS RNK FROM EMPSALARY
)
--SELECT * FROM REMOVERECORD;
DELETE FROM REMOVERECORD WHERE RNK>1;

SELECT * FROM REMOVERECORD;

-- IT IS NECESSARY AFTER CREATING CTE WE NEED TO PERFORM ANY ACTION EITHER SELECT, DELETE OR UPDATE.

-- WHEN WE DELETE DATA FROM CTE THEN DATA WILL ALSO DELETED FROM CORE TABLE.

-- ===================== FIND THE NTH HIGHEST SALARY USING CTE ===============================================

-- CTE IS THE THIRD WAY TO FIND NTH HIGHEST SALARY.

WITH HIGHSALARY(EID,ENAME,ESALARY,DID,RNK)
AS
(
SELECT EID,ENAME,ESALARY,DID, DENSE_RANK() OVER(ORDER BY ESALARY DESC) AS RNK FROM EMPSALARY
)
SELECT * FROM HIGHSALARY WHERE RNK = 3;

-- SUBQUERY DOWN THE PERFORMANCE OF QUERY.

-- CTE IS BETTER PERFORMANCE WISE THEN SUBQUERY.