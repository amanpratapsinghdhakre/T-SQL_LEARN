-- ============================================ VIEWS IN SQL SERVER =====================================

/* CREATE TABLE EMPLOYEE_DETAILS(
EID INT IDENTITY(1,1) NOT NULL,
ENAME NVARCHAR(50) NOT NULL,
ECITY NVARCHAR(50) NOT NULL,
ESALARY INT NOT NULL); */

SELECT * FROM EMPLOYEES;

SELECT * FROM EMP_DEPT;

-- WE CAN SELECT ALL COLUMNS OF TABLE.

CREATE VIEW EMPLOYEE_VIEW1
AS
SELECT * FROM EMPLOYEES;

SELECT * FROM EMPLOYEE_VIEW1;

-- WE CAN SELECT SPECIFIC COLUMNS OF TABLE.

CREATE VIEW EMPLOYEE_VIEW2
AS
SELECT EMP_ID,NAME,AGE FROM EMPLOYEES;

SELECT * FROM EMPLOYEE_VIEW2;

-- TO SELECT AVIEW WITH CREATION AT THE SAME TIME WE CAN USE " GO ".

CREATE VIEW EMPLOYEE_VIEW2
AS
SELECT EMP_ID,NAME,AGE FROM EMPLOYEES;

SELECT * FROM EMPLOYEE_VIEW2;

-- WE CAN SELECT COLUMNS FROM A TABLE WITH SPECIFIC CONDITION.

CREATE VIEW EMPLOYEE_VIEW3
AS
SELECT * FROM EMPLOYEES WHERE SALARY > 600000;

SELECT * FROM EMPLOYEE_VIEW3;

-- WE CAN CREATE A VIEW THAT WILL HOLD THE COLUMNS OF DIFFERENT TABLES.

CREATE VIEW EMPLOYEE_VIEW4
AS
SELECT E1.NAME,E1.AGE,E1.SALARY,E2.DEPT_ID,E2.DEPARTMENT,E2.CITY
FROM EMPLOYEES E1 JOIN EMP_DEPT E2 ON E1.EMP_ID = E2.EMP_ID;

SELECT * FROM EMPLOYEE_VIEW4;

-- DROPPING A VIEW.

DROP VIEW EMPLOYEE_VIEW1;

SELECT * FROM EMPLOYEE_VIEW1;  -- NOW IT IS DROP.

-- GETTING INFORMATION ABOUT A VIEW: WE CAN RETRIEVE ALL THE INFORMATION OF A VIEW USING THE " SP_HELPTEXT VIEW_NAME ".

SP_HELPTEXT EMPLOYEE_VIEW4;

-- ALTER VIEW IN SQL SERVER.

ALTER VIEW EMPLOYEE_VIEW4
AS
SELECT E1.NAME,E1.AGE,E2.DEPT_ID,E2.DEPARTMENT,E2.CITY
FROM EMPLOYEES E1 JOIN EMP_DEPT E2 ON E1.EMP_ID = E2.EMP_ID;

SELECT * FROM EMPLOYEE_VIEW4;

-- WE CAN USE CONDITIONS OR FILTER IN VIEWS.

CREATE VIEW EMPLOYEE_VIEW5
AS
SELECT E1.NAME,E1.AGE,E1.SALARY,E2.DEPT_ID,E2.DEPARTMENT,E2.CITY
FROM EMPLOYEES E1 JOIN EMP_DEPT E2 ON E1.EMP_ID = E2.EMP_ID
WHERE E1.SALARY > 700000;

SELECT * FROM EMPLOYEE_VIEW5;

-- RENAMING THE VIEW.

SP_RENAME EMPLOYEE_VIEW5, EMPLOYEEVIEWNEW;

SELECT * FROM EMPLOYEEVIEWNEW;

-- REFRESHING A VIEW IN SQL SERVER.

CREATE VIEW EMPLOYEE_VIEW6
AS
SELECT * FROM EMPLOYEES;

SELECT * FROM EMPLOYEES;

-- ADD A COLUMN INSIDE EMPLOYEES TABLE.

ALTER TABLE EMPLOYEES ADD DEPARTMENT VARCHAR(50);

SELECT * FROM EMPLOYEES;

SELECT * FROM EMPLOYEE_VIEW6;

-- SP_REFRESHVIEW IS A SYSTEM LEVEL STORED PROCEDURE THAT REFRESHES THE METADATA OF ANY VIEW.

SP_REFRESHVIEW EMPLOYEE_VIEW6;

SELECT * FROM EMPLOYEE_VIEW6;

-- SCHEMABINDING A VIEW.

CREATE VIEW EMPLOYEE_VIEW7
WITH SCHEMABINDING
AS
SELECT EMP_ID,NAME,GENDER,AGE,SALARY FROM DBO.EMPLOYEES;

DROP TABLE EMPLOYEES;   -- Cannot DROP TABLE 'EMPLOYEES' because it is being referenced by object 'EMPLOYEE_VIEW7'.

-- ENCRYPT A VIEW.

SP_HELPTEXT EMPLOYEE_VIEW7;

CREATE VIEW EMPLOYEE_VIEW8
WITH ENCRYPTION 
AS
SELECT EMP_ID,NAME,GENDER,AGE,SALARY FROM DBO.EMPLOYEES;

SP_HELPTEXT EMPLOYEE_VIEW8;  -- The text for object 'EMPLOYEE_VIEW8' is encrypted.



