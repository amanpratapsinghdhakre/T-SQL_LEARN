-- ================================ TRIGGERS IN SQL SERVER ====================================================

-- ================================ AFTER INSERT TRIGGERS =====================================================

CREATE TABLE EMPLOYEE_TEST
(
EMP_ID INT IDENTITY,
EMP_NAME VARCHAR(50),
EMP_SALARY DECIMAL(10,2)
);

INSERT INTO EMPLOYEE_TEST VALUES('GAURAV',1000);
INSERT INTO EMPLOYEE_TEST VALUES('RAM',1200);
INSERT INTO EMPLOYEE_TEST VALUES('SHYAM',1100);
INSERT INTO EMPLOYEE_TEST VALUES('AMAN',1300);
INSERT INTO EMPLOYEE_TEST VALUES('NISHA',1400);

SELECT * FROM EMPLOYEE_TEST;

-- CREATING A AUDIT TABLE.

CREATE TABLE EMPLOYEE_TEST_AUDIT
(
EMP_ID INT,
EMP_NAME VARCHAR(50),
EMP_SALARY DECIMAL(10,2),
AUDIT_ACTION VARCHAR(MAX),
AUDIT_TIMESTAMP DATETIME
);

SELECT * FROM EMPLOYEE_TEST_AUDIT;

-- CREATING AFTER INSERT TRIGGER ON EMPLOYEE_TEST TABLE.

CREATE TRIGGER TRIGGER1
ON EMPLOYEE_TEST
AFTER INSERT
AS
  DECLARE @EID INT;
  DECLARE @ENAME VARCHAR(50);
  DECLARE @ESALARY DECIMAL(10,2);
  DECLARE @AUDIT_ACTION VARCHAR(MAX);

  -- INSERTED IS A MAGIC TABLE HERE AND WE CAN'T ACCESS THIS TABLE OUTSIDE OF THIS TRIGGER.

  SELECT @EID = I.EMP_ID FROM INSERTED I;
  SELECT @ENAME = I.EMP_NAME FROM INSERTED I;
  SELECT @ESALARY = I.EMP_SALARY FROM INSERTED I;
  SET @AUDIT_ACTION = 'INSERTED RECORD -- AFTER INSERT TRIGGER';

  INSERT INTO EMPLOYEE_TEST_AUDIT(EMP_ID,EMP_NAME,EMP_SALARY,AUDIT_ACTION,AUDIT_TIMESTAMP) VALUES
  (@EID,@ENAME,@ESALARY,@AUDIT_ACTION,GETDATE());

 PRINT ' AFTER INSERT TRIGGER FIRED';

 INSERT INTO EMPLOYEE_TEST VALUES('SONU',2000);

 INSERT INTO EMPLOYEE_TEST VALUES('MONU',1800);

 -- ================================ AFTER UPDATE TRIGGERS =====================================================

CREATE TRIGGER TRIGGER2
ON EMPLOYEE_TEST
FOR UPDATE
AS
   DECLARE @EID INT;
   DECLARE @ENAME VARCHAR(50);
   DECLARE @ESALARY DECIMAL(10,2);
   DECLARE @AUDIT_ACTION VARCHAR(MAX);

   SELECT @EID = I.EMP_ID FROM INSERTED I;
   SELECT @ENAME = I.EMP_NAME FROM INSERTED I;
   SELECT @ESALARY = I.EMP_SALARY FROM INSERTED I;

   IF UPDATE(EMP_NAME)
      SET @AUDIT_ACTION = 'UPDATED NAME -- AFTER INSERTED TRIGGER';
   IF UPDATE(EMP_SALARY)
      SET @AUDIT_ACTION = 'UPDATED SALARY -- AFTER INSERTED TRIGGER';

    INSERT INTO EMPLOYEE_TEST_AUDIT(EMP_ID,EMP_NAME,EMP_SALARY,AUDIT_ACTION,AUDIT_TIMESTAMP) VALUES
   (@EID,@ENAME,@ESALARY,@AUDIT_ACTION,GETDATE());

  

-- ALTER THE TRIGGER.

ALTER TRIGGER TRIGGER2
ON EMPLOYEE_TEST
FOR UPDATE
AS
   DECLARE @EID INT;
   DECLARE @ENAME VARCHAR(50);
   DECLARE @ESALARY DECIMAL(10,2);
   DECLARE @AUDIT_ACTION VARCHAR(MAX);

   SELECT @EID = I.EMP_ID FROM INSERTED I;
   SELECT @ENAME = I.EMP_NAME FROM INSERTED I;
   SELECT @ESALARY = I.EMP_SALARY FROM INSERTED I;

   IF UPDATE(EMP_NAME)
      SET @AUDIT_ACTION = 'UPDATED NAME -- AFTER INSERTED TRIGGER';
   IF UPDATE(EMP_SALARY)
      SET @AUDIT_ACTION = 'UPDATED SALARY -- AFTER INSERTED TRIGGER';

   INSERT INTO EMPLOYEE_TEST_AUDIT(EMP_ID,EMP_NAME,EMP_SALARY,AUDIT_ACTION,AUDIT_TIMESTAMP) VALUES
   (@EID,@ENAME,@ESALARY,@AUDIT_ACTION,GETDATE());

   PRINT 'AFTER UPDATE TRIGGER FIRED';

SELECT * FROM EMPLOYEE_TEST;

SELECT * FROM EMPLOYEE_TEST_AUDIT;

UPDATE EMPLOYEE_TEST SET EMP_NAME = 'PAVAN' WHERE EMP_ID = 4;

UPDATE EMPLOYEE_TEST SET EMP_SALARY = 1100 WHERE EMP_ID = 3;

 -- ================================ AFTER DELETE TRIGGERS =====================================================

CREATE TRIGGER TRIGGER3
ON EMPLOYEE_TEST
AFTER DELETE 
AS
  DECLARE @EID INT;
  DECLARE @ENAME VARCHAR(50);
  DECLARE @ESALARY DECIMAL(10,2);
  DECLARE @AUDIT_ACTION VARCHAR(MAX);

  SELECT @EID = D.EMP_ID FROM DELETED D;
  SELECT @ENAME = D.EMP_NAME FROM DELETED D;
  SELECT @ESALARY = D.EMP_SALARY FROM DELETED D;
  SET @AUDIT_ACTION = ' DELETED RECORD -- AFTER DELETED TRIGGER';

  INSERT INTO EMPLOYEE_TEST_AUDIT(EMP_ID,EMP_NAME,EMP_SALARY,AUDIT_ACTION,AUDIT_TIMESTAMP) VALUES
  (@EID,@ENAME,@ESALARY,@AUDIT_ACTION,GETDATE());

  PRINT ' AFTER DELETE TRIGGER FIRED';

DELETE FROM EMPLOYEE_TEST WHERE EMP_ID = 7;

--================================ HOW TO ENABLE OR DISABLE ALL TRIGGERS IN SQL SERVER =================================================

SELECT * FROM SYS.OBJECTS;

SELECT * FROM SYS.TABLES;

SELECT DISTINCT TYPE,TYPE_DESC FROM SYS.OBJECTS;

SELECT * FROM SYS.OBJECTS WHERE TYPE = 'TR';

-- ENABLE A TRIGGERS.

ALTER TABLE EMPLOYEE_TEST ENABLE TRIGGER TRIGGER1;

ALTER TABLE EMPLOYEE_TEST ENABLE TRIGGER ALL;

-- DISABLE A TRIGGERS.

ALTER TABLE EMPLOYEE_TEST DISABLE TRIGGER TRIGGER1;

ALTER TABLE EMPLOYEE_TEST DISABLE TRIGGER ALL;






