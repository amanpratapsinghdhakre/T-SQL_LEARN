-- =========================================== DML INSTEAD OF TRIGGERS ===============================================================

-- INSTEAD OF TRIGGERS ARE EXECUTED IN PLACE OF INSERT, UPDATE AND DELETE OPERATIONS.

-- TYPES OF INSTEAD OF TRIGGERS

-- 1) INSTEAD OF INSERT TRIGGER.

-- 2) INSTEAD OF UPDATE TRIGGER.

-- 1) INSTEAD OF DELETE TRIGGER.

-- ============================================= -- 1) INSTEAD OF INSERT TRIGGER. ========================================================

SELECT * FROM EMPLOYEE_TEST;

CREATE TRIGGER TRIGGER_INSTEAD1
ON EMPLOYEE_TEST
INSTEAD OF INSERT
AS
BEGIN 
    PRINT ' YOU ARE NOT ALLOWED TO INSERT A DATA INSIDE THIS TABLE !!';
END

INSERT INTO EMPLOYEE_TEST VALUES('AMAN',2500);

-- =============================================== 2) INSTEAD OF UPDATE TRIGGER. ========================================================

CREATE TRIGGER TRIGGER_INSTEAD2
ON EMPLOYEE_TEST
INSTEAD OF UPDATE
AS
BEGIN
    PRINT ' YOU ARE NOT ALLOWED TO UPDATE A DATA INSIDE THIS TABLE !!';
END

UPDATE EMPLOYEE_TEST SET EMP_NAME = 'NISHANT' WHERE EMP_ID = 5;

-- =============================================== 3) INSTEAD OF DELETE TRIGGER. ========================================================

CREATE TRIGGER TRIGGER_INSTEAD3
ON EMPLOYEE_TEST
INSTEAD OF DELETE
AS
BEGIN
    PRINT ' YOU ARE NOT ALLOWED TO DELETE A DATA FROM THIS TABLE !!';
END

DELETE FROM EMPLOYEE_TEST WHERE EMP_ID = 2;

-- WE CAN APPLY MORE THAN ONE AFTER TRIGGER ON TABLE.

-- WE CAN'T APPLY MORE THAN ONE INSTEAD OF INSERT TRIGGER ON TABLE.

-- WE CAN'T APPLY MORE THAN ONE INSTEAD OF UPDATE TRIGGER ON TABLE.

-- WE CAN'T APPLY MORE THAN ONE INSTEAD OF DELETE TRIGGER ON TABLE.

-- ======================================= INSTEAD OF INSERT TRIGGER. ======================================================

CREATE TABLE EMPLOYEE_INSTEAD_AUDIT
(
AUDIT_ID INT PRIMARY KEY IDENTITY,
AUDIT_INFORMATION VARCHAR(MAX)
);

SELECT * FROM EMPLOYEE_INSTEAD_AUDIT;

CREATE TRIGGER TRIGGER_INSTEADOF1
ON EMPLOYEE_TEST
INSTEAD OF INSERT
AS
BEGIN
    INSERT INTO EMPLOYEE_INSTEAD_AUDIT VALUES('SOMEONE TRIES TO INSERT DATA INTO EMPLOYEE_TEST TABLE AT : '+ CAST(GETDATE() AS VARCHAR(100)));
END

-- DROPPING A TRIGGER.

DROP TRIGGER TRIGGER_INSTEAD1;

INSERT INTO EMPLOYEE_TEST VALUES('AMAN',2500); /* THIS ROW WILL NOT GO IN EMPLOYEE_TEST TABLE. IT WILL GO FIRST INSIDE INSERTED MAGIC TABLE
                                                  THAN EMPLOYEE_INSTEAD_AUDIT TABLE. */

SELECT * FROM EMPLOYEE_TEST;

SELECT * FROM EMPLOYEE_INSTEAD_AUDIT;

-- =========================================== INSTEAD OF UPDATE TRIGGER. ==========================================================

CREATE TRIGGER TRIGGER_INSTEADOF2
ON EMPLOYEE_TEST
INSTEAD OF UPDATE
AS
BEGIN
    INSERT INTO EMPLOYEE_INSTEAD_AUDIT VALUES('SOMEONE TRIES TO UPDATE DATA INTO EMPLOYEE_TEST TABLE AT : '+ CAST(GETDATE() AS VARCHAR(100)));
END

DROP TRIGGER TRIGGER_INSTEAD2;

UPDATE EMPLOYEE_TEST SET EMP_NAME = 'NISHANT' WHERE EMP_ID = 5;

SELECT * FROM EMPLOYEE_TEST;

SELECT * FROM EMPLOYEE_INSTEAD_AUDIT;

-- =========================================== INSTEAD OF DELETE TRIGGER. ==========================================================

CREATE TRIGGER TRIGGER_INSTEADOF3
ON EMPLOYEE_TEST
INSTEAD OF DELETE
AS
BEGIN
    INSERT INTO EMPLOYEE_INSTEAD_AUDIT VALUES('SOMEONE TRIES TO DELETE DATA INTO EMPLOYEE_TEST TABLE AT : '+ CAST(GETDATE() AS VARCHAR(100)));
END

DROP TRIGGER TRIGGER_INSTEAD3;

DELETE FROM EMPLOYEE_TEST WHERE EMP_ID = 6;

SELECT * FROM EMPLOYEE_TEST;

SELECT * FROM EMPLOYEE_INSTEAD_AUDIT;

/* INSTEAD OF TRIGGERS ARE EXECUTED BEFORE CONSTRAINT CHECKS ARE PERFORMED ON THE TABLE AND AFTER THE CREATION OF THE INSERTEAD
AND DELETED TABLES. */

-- WE CAN VIEW THE DEFINITION OF TRIGGERS BY USING SP_HELPTEXT SYSTEM STORED PROCEDURE.

SP_HELPTEXT TRIGGER_INSTEADOF2;

-- A DML TRIGGER CAN BE ENCYPTED TO HIDE ITS DEFINITION OR QUERY BY USING WITH ENCRYPTION COMMAND.

ALTER TRIGGER TRIGGER_INSTEADOF2
ON EMPLOYEE_TEST
WITH ENCRYPTION
INSTEAD OF UPDATE
AS
BEGIN
    INSERT INTO EMPLOYEE_INSTEAD_AUDIT VALUES('SOMEONE TRIES TO UPDATE DATA INTO EMPLOYEE_TEST TABLE AT : '+ CAST(GETDATE() AS VARCHAR(100)));
END

SP_HELPTEXT TRIGGER_INSTEADOF2;